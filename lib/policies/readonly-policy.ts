import cdk = require('@aws-cdk/core');
import iam = require('@aws-cdk/aws-iam');

export class ReadonlyPolicy extends cdk.Stack {
  constructor(scope: cdk.Construct, id: string, props?: cdk.StackProps) {
    super(scope, id, props);

    const document = new iam.PolicyDocument();
    document.addStatements(new iam.PolicyStatement({
      resources: ['*'],
      actions: [
        'acm:ListCertificates',
        'athena:List*',
        'autoscaling:Describe*',
        'aws-marketplace:ViewSubscriptions',
        'batch:ListJobs',
        'clouddirectory:ListAppliedSchemaArns',
        'clouddirectory:ListDevelopmentSchemaArns',
        'clouddirectory:ListDirectories',
        'clouddirectory:ListPublishedSchemaArns',
        'cloudformation:DescribeStacks',
        'cloudformation:List*',
        'cloudfront:List*',
        'cloudhsm:ListAvailableZones',
        'cloudhsm:ListHapgs',
        'cloudhsm:ListHsms',
        'cloudhsm:ListLunaClients',
        'cloudsearch:DescribeDomains',
        'cloudsearch:List*',
        'cloudtrail:DescribeTrails',
        'cloudtrail:LookupEvents',
        'cloudwatch:Get*',
        'cloudwatch:List*',
        'codebuild:ListBuilds*',
        'codebuild:ListProjects',
        'codecommit:List*',
        'codedeploy:Get*',
        'codedeploy:List*',
        'codepipeline:ListPipelines',
        'codestar:List*',
        'codestar:Verify*',
        'cognito-identity:ListIdentities',
        'cognito-identity:ListIdentityPools',
        'cognito-idp:List*',
        'cognito-sync:ListDatasets',
        'config:Describe*',
        'config:List*',
        'connect:List*',
        'datapipeline:DescribePipelines',
        'datapipeline:GetAccountLimits',
        'datapipeline:ListPipelines',
        'dax:DescribeClusters',
        'dax:DescribeDefaultParameters',
        'dax:DescribeEvents',
        'dax:DescribeParameterGroups',
        'dax:DescribeParameters',
        'dax:DescribeSubnetGroups',
        'dax:DescribeTable',
        'dax:ListTables',
        'dax:ListTags',
        'devicefarm:List*',
        'directconnect:Describe*',
        'discovery:List*',
        'dms:List*',
        'ds:DescribeDirectories',
        'dynamodb:DescribeBackup',
        'dynamodb:DescribeContinuousBackups',
        'dynamodb:DescribeGlobalTable',
        'dynamodb:DescribeGlobalTableSettings',
        'dynamodb:DescribeLimits',
        'dynamodb:DescribeReservedCapacity',
        'dynamodb:DescribeReservedCapacityOfferings',
        'dynamodb:DescribeStream',
        'dynamodb:DescribeTable',
        'dynamodb:DescribeTimeToLive',
        'dynamodb:ListBackups',
        'dynamodb:ListGlobalTables',
        'dynamodb:ListStreams',
        'dynamodb:ListTables',
        'dynamodb:ListTagsOfResource',
        'ec2:DescribeAccountAttributes',
        'ec2:DescribeAddresses',
        'ec2:DescribeAvailabilityZones',
        'ec2:DescribeBundleTasks',
        'ec2:DescribeClassicLinkInstances',
        'ec2:DescribeConversionTasks',
        'ec2:DescribeCustomerGateways',
        'ec2:DescribeDhcpOptions',
        'ec2:DescribeExportTasks',
        'ec2:DescribeFlowLogs',
        'ec2:DescribeHost*',
        'ec2:DescribeIdentityIdFormat',
        'ec2:DescribeIdFormat',
        'ec2:DescribeImage*',
        'ec2:DescribeImport*',
        'ec2:DescribeInstance*',
        'ec2:DescribeInternetGateways',
        'ec2:DescribeKeyPairs',
        'ec2:DescribeMovingAddresses',
        'ec2:DescribeNatGateways',
        'ec2:DescribeNetwork*',
        'ec2:DescribePlacementGroups',
        'ec2:DescribePrefixLists',
        'ec2:DescribeRegions',
        'ec2:DescribeReserved*',
        'ec2:DescribeRouteTables',
        'ec2:DescribeSecurityGroups',
        'ec2:DescribeSnapshot*',
        'ec2:DescribeSpot*',
        'ec2:DescribeSubnets',
        'ec2:DescribeTags',
        'ec2:DescribeVolume*',
        'ec2:DescribeVpc*',
        'ec2:DescribeVpnGateways',
        'ecr:DescribeRepositories',
        'ecr:ListImages',
        'ecs:Describe*',
        'ecs:List*',
        'elasticache:Describe*',
        'elasticbeanstalk:DescribeApplications',
        'elasticbeanstalk:DescribeApplicationVersions',
        'elasticbeanstalk:DescribeEnvironments',
        'elasticbeanstalk:ListAvailableSolutionStacks',
        'elasticfilesystem:DescribeFileSystems',
        'elasticloadbalancing:DescribeListeners',
        'elasticloadbalancing:DescribeLoadBalancers',
        'elasticloadbalancing:DescribeTargetGroups',
        'elasticloadbalancing:DescribeTargetHealth',
        'elasticmapreduce:List*',
        'elastictranscoder:List*',
        'es:DescribeElasticsearchDomain',
        'es:DescribeElasticsearchDomains',
        'es:ListDomainNames',
        'events:ListRuleNamesByTarget',
        'events:ListRules',
        'events:ListTargetsByRule',
        'firehose:DescribeDeliveryStream',
        'firehose:List*',
        'gamelift:List*',
        'glacier:List*',
        'greengrass:List*',
        'iam:GenerateCredentialReport',
        'iam:GenerateServiceLastAccessedDetails',
        'iam:Get*',
        'iam:List*',
        'iam:SimulateCustomPolicy',
        'iam:SimulatePrincipalPolicy',
        'importexport:ListJobs',
        'inspector:List*',
        'iot:List*',
        'kinesis:ListStreams',
        'kinesisanalytics:ListApplications',
        'kms:ListKeys',
        'lambda:List*',
        'lex:GetBotAliases',
        'lex:GetBotChannelAssociations',
        'lex:GetBots',
        'lex:GetBotVersions',
        'lex:GetIntents',
        'lex:GetIntentVersions',
        'lex:GetSlotTypes',
        'lex:GetSlotTypeVersions',
        'lex:GetUtterancesView',
        'lightsail:GetBlueprints',
        'lightsail:GetBundles',
        'lightsail:GetInstances',
        'lightsail:GetInstanceSnapshots',
        'lightsail:GetKeyPair',
        'lightsail:GetRegions',
        'lightsail:GetStaticIps',
        'lightsail:IsVpcPeered',
        'logs:Describe*',
        'machinelearning:Describe*',
        'mobilehub:ListAvailableFeatures',
        'mobilehub:ListAvailableRegions',
        'mobilehub:ListProjects',
        'mobiletargeting:GetApplicationSettings',
        'mobiletargeting:GetCampaigns',
        'mobiletargeting:GetImportJobs',
        'mobiletargeting:GetSegments',
        'opsworks-cm:Describe*',
        'opsworks:Describe*',
        'organizations:List*',
        'polly:Describe*',
        'polly:List*',
        'rds:Describe*',
        'redshift:DescribeClusters',
        'redshift:DescribeEvents',
        'redshift:ViewQueriesInConsole',
        'route53:Get*',
        'route53:List*',
        'route53domains:List*',
        's3:GetBucketLocation',
        's3:ListAllMyBuckets',
        's3:ListBucket',
        'sagemaker:Describe*',
        'sagemaker:List*',
        'sdb:List*',
        'servicecatalog:List*',
        'ses:List*',
        'shield:List*',
        'sns:List*',
        'sqs:ListQueues',
        'ssm:ListAssociations',
        'ssm:ListDocuments',
        'states:ListActivities',
        'states:ListStateMachines',
        'storagegateway:ListGateways',
        'storagegateway:ListLocalDisks',
        'storagegateway:ListVolumeRecoveryPoints',
        'storagegateway:ListVolumes',
        'swf:List*',
        'trustedadvisor:Describe*',
        'waf-regional:List*',
        'waf:List*',
        'workdocs:DescribeAvailableDirectories',
        'workdocs:DescribeInstances',
        'workmail:Describe*',
        'workspaces:Describe*',
      ]
    }));

    document.addStatements(new iam.PolicyStatement({
      resources: ['*'],
      actions: [
        'aws-portal:ViewPaymentMethods',
        'aws-portal:ViewAccount',
        'aws-portal:ViewBilling',
        'aws-portal:ViewUsage',
        'budgets:ViewBudget',
        'pricing:DescribeServices',
        'pricing:GetAttributeValues',
        'pricing:GetProducts',
      ]
    }));

    const readonly_policy_name = this.node.tryGetContext("readonly_policy_name");
    const managedpolicy = new iam.CfnManagedPolicy(this, readonly_policy_name, {
        policyDocument: document,
        managedPolicyName: readonly_policy_name
    });
  }
}
